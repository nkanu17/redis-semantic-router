# News Classification Pipeline Configuration

# LLM Classifier Configuration
llm_classifier:
  model_name: "claude-3-5-haiku-latest"
  batch_size: 5
  max_concurrent: 40
  temperature: 0
  max_tokens: 4096
  max_retries: 3
  save_results: true
  results_dir: "../results/llm_classifier"

# Redis Semantic Router Configuration
semantic_router:
  redis:
    host: "localhost"
    port: 6379
    db: 0
    socket_timeout: 30.0
    socket_connect_timeout: 30.0
    retry_on_timeout: true
    decode_responses: true

  # Vectorizer configuration - choose between HuggingFace or OpenAI
  vectorizer:
    type: "huggingface"  # Options: "huggingface" or "openai"
    model: "sentence-transformers/all-MiniLM-L6-v2"
    # For OpenAI, use models like: "text-embedding-3-small", "text-embedding-3-large"
    # api_key_env: "OPENAI_API_KEY"  # Environment variable for OpenAI API key
    track_usage: true  # Track cost/token usage for OpenAI

  # Legacy support - will be converted to vectorizer config automatically
  # embedding_model: "sentence-transformers/all-MiniLM-L6-v2"
  # TODO: Remove max_text_length entirely - legacy parameter for older embedding models
  route_config:
    samples_per_class: 100
    initial_threshold: 0.6
    max_text_length: 8000  # TODO: Remove truncation entirely - modern embedding models handle full text better
    optimize_thresholds: true
    threshold_overrides:
      sport: 0.57
      business: 0.57
      politics: 0.57
      tech: 0.57
      entertainment: 0.57

  router_name: "news-classification-router"
  save_results: true
  results_dir: "../results/semantic_router"

# Data Configuration
data:
  dataset_path: "../data"
  train_file: "train_data.csv"
  validation_file: "validation_data.csv"

# Comparison Configuration
comparison:
  metrics_to_track: 
    - "accuracy"
    - "f1_macro" 
    - "f1_weighted"
    - "precision_macro"
    - "recall_macro"
    - "total_latency"
    - "avg_latency_per_article" 
    - "total_cost"
    - "cost_per_article"
    - "success_rate"
  
  save_results: true
  results_dir: "../results/comparison"
  # Redis Setup Instructions
redis_setup:
  docker_command: "docker run -d --name redis -p 6379:6379 redis/redis-stack:latest"